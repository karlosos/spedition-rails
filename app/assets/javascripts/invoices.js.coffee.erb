#= require invoices_price_in_words.js

jQuery ->
  pageLoad()

pageLoad = () ->
  startSelect()
  invoice_items_functions()
  invoice_name_get_on_date_change()
  invoice_client_info_get_on_client_change()
  date_picker_start()
  sidebar_functions()
  currency_rate_functions()
  modal_functions()
  invoice_status_functions()

#
# Invoice items
#
invoice_items_functions = () ->
  invoice_item_add_event()
  invoice_item_remove_event()
  create_object_links()
  invoice_item_calculate_on_change()
  invoice_items_price_update_on_item_change()

invoice_item_add_event = () ->
  $('form').on 'click', '.add_fields', (event) ->
    time = new Date().getTime()
    regexp = new RegExp($(this).data('id'), 'g')
    $(this).parent().parent().before($(this).data('fields').replace(regexp, time))
    event.preventDefault()
    $('.invoice_items_form').find('select').select2
      theme: 'bootstrap'
      ajax:
        url: '/items.json'
        dataType: 'json'
        processResults: (data) ->
          return {
          results: $.map(data, (item, i) ->
            {
              id: item.id
              text: item.name
            }
          )}

    create_object_links()
    invoice_items_price_update_on_item_change()
    invoice_item_calculate_on_change()

create_object_links = () ->
  $('.create_object').click (e) ->
    url = $(this).attr("href")
    window.open(url, 'co to', 'toolbars=0,width=500,height=600,left=200,top=200,scrollbars=1,resizable=1')
    e.preventDefault()

invoice_items_price_update_on_item_change = () ->
  $('.invoice_items_form').find($('.select2-hidden-accessible')).change ->
    item_id = $(this).find(":selected").val()
    unit_price_input = $(this).parent().parent().find('.unit_price')
    parent = $(this).parent().parent()
    unit_price = 0;
    $.ajax "/items/#{item_id}.json",
      type: 'GET'
      dataType: 'json'
      error: (jqXHR, textStatus, errorThrown) ->
        console.log(textStatus)
      success: (data, textStatus, jqXHR) ->
        console.log(data['unit_price'])
        unit_price = data['unit_price']
        unit_price = unit_price.toString().replace(",",".")
        unit_price_input.val(unit_price)
        invoice_item_calculate(parent)

invoice_item_calculate = (invoice_item_group) ->
  parent = invoice_item_group

  net_price_input = parent.find('.net_price')
  value_added_tax_input = parent.find('.value_added_tax')
  total_selling_price_input = parent.find('.total_selling_price')

  quantity = parseInt(parent.find('.quantity').val())
  unit_price = parseFloat(parent.find('.unit_price').val())
  tax_rate = parseInt(parent.find('.tax_rate').val())

  net_price = quantity * unit_price
  net_price = parseFloat(net_price).toFixed(2)
  value_added_tax = net_price * (tax_rate/100)
  value_added_tax = parseFloat(value_added_tax).toFixed(2)
  total_selling_price = parseFloat(net_price) + parseFloat(value_added_tax)
  total_selling_price = parseFloat(total_selling_price).toFixed(2)

  net_price_input.val(parseFloat(net_price).toFixed(2))
  value_added_tax_input.val(parseFloat(value_added_tax).toFixed(2))
  total_selling_price_input.val(parseFloat(total_selling_price).toFixed(2))

  invoice_calculate()

invoice_item_calculate_on_change = () ->
  $('.invoice_items_form').find('.editable_invoice_item_input').change ->
    invoice_item_calculate($(this).parent().parent())

invoice_item_remove_event = () ->
  $('form').on 'click', '.remove_invoice_items', (event) ->
    $(this).prev('input[type=hidden]').val('1')
    $(this).closest('tr').hide()
    event.preventDefault()
    invoice_calculate()

invoice_calculate = () ->
  net_price_inputs = $('.net_price')
  value_added_tax_inputs = $('.value_added_tax')
  total_selling_price_inputs = $('.total_selling_price')

  invoice_net_price = $('#invoice_net_price')
  invoice_value_added_tax = $('#invoice_value_added_tax')
  invoice_total_selling_price = $('#invoice_total_selling_price')

  net_price = 0
  value_added_tax = 0
  total_selling_price = 0

  net_price_inputs.each (index, element) ->
    if ($(this).is(":visible"))
      net_price += parseFloat($(this).val())
  value_added_tax_inputs.each (index, element) ->
    if ($(this).is(":visible"))
      value_added_tax += parseFloat($(this).val())
  total_selling_price_inputs.each (index, element) ->
    if ($(this).is(":visible"))
      total_selling_price += parseFloat($(this).val())

  invoice_net_price.val(parseFloat(net_price).toFixed(2))
  invoice_value_added_tax.val(value_added_tax.toFixed(2))
  invoice_total_selling_price.val(total_selling_price.toFixed(2))
  after_float_point = total_selling_price.toFixed(2) - Math.floor(total_selling_price.toFixed(2))
  after_float_point = after_float_point.toFixed(2) * 100
  if after_float_point < 10
    after_float_point = "0" + after_float_point.toFixed()

  total_price_in_words = polishToWords(total_selling_price.toFixed(2)) + " euro " + after_float_point + "/100"
  $('#invoice_total_price_in_words').val(total_price_in_words)

#
# Modal functions
#
modal_functions = () ->
  modal_success_binds()
  modal_error_binds()
  modal_actions()
  hide_optional_fields_in_modal()
  toogle_optional_fields_in_modal_on_click()

modal_success_binds = () ->
  $(document).bind("ajax:success", (event, data, status, xhr) ->
    if ( event.target.id == "new_client" )
      option = $('<option selected>' + data.name + '</option>').val("" + data.id);
      $("#invoice_client_id").append(option).trigger('change');
      $('#new_client_modal').modal_success();
      console.log("klient")
    else if (event.target.id == "new_item")
      $('#new_item_modal').modal_success();
      console.log("item"))

modal_error_binds = () ->
  $(document).bind("ajaxError", (event, jqxhr, settings, exception) ->
    $(event.data).render_form_errors($.parseJSON(jqxhr.responseText)))

# functions

modal_actions = () ->
  $.fn.modal_success = ->
    # close modal
    @modal 'hide'
    # clear form input elements
    # todo/note: handle textarea, select, etc
    @find('form input[type="text"]').val ''
    # clear error state
    @clear_previous_errors()
    return

  $.fn.render_form_errors = (errors) ->
    console.log 'chce rendererowarac errory'
    $form = this
    @clear_previous_errors()
    model = @data('model')
    console.log model
    #client_contact_attributes_fax
    # show error messages in input form-group help-block
    $.each errors, (field, messages) ->
      console.log field
      if field.search('[.]') > 0
        association = field.substring(0, field.search('[.]'))
        association = association + '_attributes'
        attribute = field.substring(field.search('[.]') + 1)
        $input = $('input[name="' + model + '[' + association + ']' + '[' + attribute + ']"]')
        console.log 'input[name="' + model + '[' + association + ']' + '[' + attribute + ']"]'
        $input.closest('.form-group').addClass('has-error').find('.help-block').html messages.join(' & ')
      else
        $input = $('input[name="' + model + '[' + field + ']"]')
        console.log 'input[name="' + model + '[' + field + ']"]'
        $input.closest('.form-group').addClass('has-error').find('.help-block').html messages.join(' & ')
      return
    return

  $.fn.clear_previous_errors = ->
    $('.form-group.has-error', this).each ->
      $('.help-block', $(this)).html ''
      $(this).removeClass 'has-error'
      return
    return

hide_optional_fields_in_modal = () ->
  $('.modal-body').find('.optional').hide()

toogle_optional_fields_in_modal_on_click = () ->
  $('#show_more_modal').click ->
    $('.optional').toggle()

#
# Select 2 opions
#
startSelect = () ->
  $('#invoice_client_id').select2
    theme: 'bootstrap'
    ajax:
      url: '/clients.json'
      dataType: 'json'
      processResults: (data) ->
        return {
        results: $.map(data, (client, i) ->
          {
            id: client.id
            text: client.client_info
          }
        )}
    language:
      noResults: ->
        return "<a type=\"button\" class=\"btn btn-info btn-lg\" onclick='show_client_modal()'>Stwórz klienta</a>"
    escapeMarkup: (markup) ->
      return markup;

  $('#invoice_seller_id').select2
    theme: 'bootstrap'
    ajax:
      url: '/clients.json'
      dataType: 'json'
      processResults: (data) ->
        return {
        results: $.map(data, (client, i) ->
          {
            id: client.id
            text: client.name
          }
        )}

  $('.invoice_items_form').find('select').select2
    theme: 'bootstrap'
    placeholder:
      id: "-1",
      placeholder: "Select an option"
    ajax:
      url: '/items.json'
      dataType: 'json'
      processResults: (data) ->
        return {
        results: $.map(data, (item, i) ->
          {
            id: item.id
            text: item.name
          }
        )}
    language:
      noResults: ->
        return "<a type=\"button\" class=\"btn btn-info btn-lg\" onclick='show_item_modal()'>Stwórz towar</a>"
    escapeMarkup: (markup) ->
      return markup;

#
# Invoice name
#
invoice_name_get_on_date_change = () ->
  $('#invoice_date').change ->
    date = new Date($(this).val())
    month = date.getMonth()+1
    year = date.getYear() + 1900

    invoice_month = String($('#invoice_invoice_name_attributes_month').val())
    console.log(invoice_month)
    console.log(String(month))
    if String(month) != invoice_month
      $.ajax "/invoices/invoice_name/#{year}/#{month}.json",
        type: 'GET'
        dataType: 'json'
        success: (data, textStatus, jqXHR) ->
          console.log(data['number'])
          $('#invoice_invoice_name_attributes_number').val(data['number'])
          $('#invoice_invoice_name_attributes_month').val(month)
          $('#invoice_invoice_name_attributes_year').val(year)

#
# Invoice client
#
invoice_client_info_get_on_client_change = () ->
  $('#invoice_client_id').change ->
    client_name = $('#invoice_client_name')
    client_street = $('#invoice_client_street')
    client_zip = $('#invoice_client_zip')
    client_city = $('#invoice_client_city')
    client_country = $('#invoice_client_country')
    client_email = $('#invoice_client_email')
    client_phone = $('#invoice_client_phone')
    client_id = $(this).val()
    $.ajax "/clients/#{client_id}.json",
      type: 'GET'
      dataType: 'json'
      error: (jqXHR, textStatus, errorThrown) ->
        console.log(textStatus)
      success: (data, textStatus, jqXHR) ->
        console.log(data['client_street'])
        client_name.val(data['client_name'])
        client_street.val(data['client_street'])
        client_zip.val(data['client_zip'])
        client_city.val(data['client_city'])
        client_country.val(data['client_country'])
        client_email.val(data['client_email'])
        client_phone.val(data['client_phone'])

#
# Datepicker
#
date_picker_start = () ->
  $('#datetimepicker1').datepicker ->
    locale: 'pl'

  $('.date').datepicker ->
    locale: 'pl'

#
# Sidebar
#
sidebar_functions = () ->
    advanced_search_button_event()
    reset_search_button_event()

advanced_search_button_event = () ->
  $('#advanced_search_button').click (e) ->
    advanced_search_form = $('#advanced_search_invoice_form')
    if advanced_search_form.is(":visible")
      advanced_search_form.hide(300)
      $(this).text("Zaawansowane wyszukiwanie")
      advanced_search_clear()
      e.preventDefault()
    else
      advanced_search_form.show(300)
      $(this).text("Tylko proste wyszukiwanie")
      e.preventDefault()

reset_search_button_event = () ->
  $('#reset_search_button').click (e) ->
    invoice_search_clear()
    e.preventDefault()

invoice_search_clear = () ->
  simple_search_clear()
  advanced_search_clear()

simple_search_clear = () ->
  $('#short_search_invoice_form').find('input').val("")

advanced_search_clear = () ->
  $('#advanced_search_invoice_form').find('input').val("")
  $('#advanced_search_invoice_form').find('input[type=checkbox]').prop('checked', false);

#
# Currency exchange
#
currency_rate_functions = () ->
    get_currency_rate()
    get_currency_rate_on_date_change()

get_currency_rate_on_date_change = () ->
  $('#invoice_date').change ->
    get_currency_rate()
  $('#invoice_currency_rate_name').change ->
    currency = $('#invoice_currency_rate_name').val()
    $('.currency').val(currency)
    get_currency_rate()
    $('.currency_change_warning').show()
  $('#invoice_invoice_exchange_currency').change ->
    get_currency_rate()

get_currency_rate = () ->
    date = $('#invoice_date').val()
    currency = $('#invoice_currency_rate_name').val()
    to_currency = $('#invoice_invoice_exchange_currency').val()
    if currency == to_currency || to_currency == "Nie przeliczaj"
      clear_currency_exchange()
      return 0

    #console.log(date)
    date = moment(date)
    day_before_date = date.subtract(1, 'days')
    console.log(day_before_date.weekday())
    if day_before_date.weekday() == 6
      day_before_date = day_before_date.subtract(1, 'days')
    else if day_before_date.weekday() == 0
      day_before_date = day_before_date.subtract(2, 'days')

    day_before_date_format = day_before_date.format('YYYY-MM-DD')
    #console.log(day_before_date_format);
    # url = "http://api.nbp.pl/api/exchangerates/rates/A/EUR/" + day_before_date_format
    # currency_rate_table_name = $('#invoice_currency_rate_table_name')
    # currency_rate_name = $('#invoice_currency_rate_name')
    # currency_rate = $('#invoice_currency_rate')
    get_currency_rate_from_date(day_before_date, currency, 0)

get_currency_rate_from_date = (date, currency, recurrency_level) ->
    url = "http://api.nbp.pl/api/exchangerates/rates/A/"+currency+"/" + date.format('YYYY-MM-DD')
    currency_rate_table_name = $('#invoice_currency_rate_table_name')
    #currency_rate_name = $('#invoice_currency_rate_name')
    currency_rate = $('#invoice_currency_rate')

    $.ajax url,
      type: 'GET'
      dataType: 'json'
      error: (jqXHR, textStatus, errorThrown) ->
        if recurrency_level < 5
          get_currency_rate_from_date(date.subtract(1, 'days'), currency, recurrency_level+1)
        #console.log(textStatus)
      success: (data, textStatus, jqXHR) ->
        #console.log(data)
        currency_rate_table_name.val(data["rates"][0]["no"])
        currency_rate.val(data["rates"][0]["mid"].toString())
        #currency_rate_name.val(data["code"])

clear_currency_exchange = () ->
  currency_rate_table_name = $('#invoice_currency_rate_table_name')
  currency_rate = $('#invoice_currency_rate')
  currency_rate_table_name.val('')
  currency_rate.val('')
#
# Invoice status
#
invoice_status_functions = () ->
  change_invoice_status_on_select_change()
  show_menu_on_invoice_update_checkbox_ticked()
  check_invoice_update_checkboxes()

change_invoice_status_on_select_change = () ->
  $('.invoice_option').click (e) ->
    status_index = $(this).attr("value")
    invoice_id = $(this).parent().parent().attr("invoice-id")
    main_button = $(this).parent().parent().parent().find('.status')
    toggle_button = $(this).parent().parent().parent().find('.dropdown-toggle')
    console.log(invoice_id)
    console.log(status_index)
    url = '/invoices/' + invoice_id

    $.ajax url,
      type: 'PUT'
      dataType: 'json'
      data:
            invoice : { status: status_index }
      error: (jqXHR, textStatus, errorThrown) ->
        console.log(textStatus)
      success: (data, textStatus, jqXHR) ->
        console.log(data)
        main_button.html(data["status"]);
        button_classes = "btn status btn-status-"+status_index
        toggle_classes = "btn dropdown-toggle btn-status-"+status_index
        main_button.attr('class', button_classes)
        toggle_button.attr('class', toggle_classes)

show_menu_on_invoice_update_checkbox_ticked = () ->
  $('.invoices_table').find('input').change ->
    check_invoice_update_checkboxes()

check_invoice_update_checkboxes = () ->
    checked_count = $('.invoices_table').find('input[type="checkbox"]:checked').length;
    if checked_count > 0
      $('.update_invoices').show()
      $('#invoices_to_update_count').show()
      $('#invoices_to_update_count').html(checked_count)
    else
      $('.update_invoices').hide()
      $('#invoices_to_update_count').hide()
