jQuery ->
  pageLoad()

pageLoad = () ->
  invoice_item_add_event()
  loading_places_remove_event()
  loading_status_functions()
  findClientOnEmailChange()
  $('select').hide()
  modal_functions()

invoice_item_add_event = () ->
  $('form').on 'click', '.add_loading_place', (event) ->
    time = new Date().getTime()
    regexp = new RegExp($(this).data('id'), 'g')
    $(this).parent().before($(this).data('fields').replace(regexp, time))
    event.preventDefault()

loading_places_remove_event = () ->
  $('form').on 'click', '.remove_loading_places', (event) ->
    $(this).prev('input[type=hidden]').val('1')
    $(this).closest('div').hide()
    event.preventDefault()
    invoice_calculate()

#
# Loading status
#
loading_status_functions = () ->
  change_loading_status_on_select_change()

change_loading_status_on_select_change = () ->
  $('.loading_option').click (e) ->
    status_index = $(this).attr("value")
    transport_order_id = $(this).parent().parent().attr("transport-order-id")
    main_button = $(this).parent().parent().parent().find('.status')
    toggle_button = $(this).parent().parent().parent().find('.dropdown-toggle')
    console.log(transport_order_id)
    console.log(status_index)
    url = '/transport_orders/' + transport_order_id

    $.ajax url,
      type: 'PUT'
      dataType: 'json'
      data:
            transport_order : { loading_status: status_index }
      error: (jqXHR, textStatus, errorThrown) ->
        console.log(textStatus)
      success: (data, textStatus, jqXHR) ->
        console.log(data)
        button_classes = "btn status btn-status-"+status_index
        toggle_classes = "btn dropdown-toggle btn-status-"+status_index
        main_button.attr('class', button_classes)
        toggle_button.attr('class', toggle_classes)

  $('.unloading_option').click (e) ->
    status_index = $(this).attr("value")
    transport_order_id = $(this).parent().parent().attr("transport-order-id")
    main_button = $(this).parent().parent().parent().find('.status')
    toggle_button = $(this).parent().parent().parent().find('.dropdown-toggle')
    console.log(transport_order_id)
    console.log(status_index)
    url = '/transport_orders/' + transport_order_id

    $.ajax url,
      type: 'PUT'
      dataType: 'json'
      data:
            transport_order : { unloading_status: status_index }
      error: (jqXHR, textStatus, errorThrown) ->
        console.log(textStatus)
      success: (data, textStatus, jqXHR) ->
        console.log(data)
        button_classes = "btn status btn-status-"+status_index
        toggle_classes = "btn dropdown-toggle btn-status-"+status_index
        main_button.attr('class', button_classes)
        toggle_button.attr('class', toggle_classes)

#
# Sidebar
#
sidebar_functions = () ->
    advanced_search_button_event()
    reset_search_button_event()

advanced_search_button_event = () ->
  $('#advanced_search_button').click (e) ->
    advanced_search_form = $('#advanced_search_invoice_form')
    if advanced_search_form.is(":visible")
      advanced_search_form.hide(300)
      $(this).text("Zaawansowane wyszukiwanie")
      advanced_search_clear()
      e.preventDefault()
    else
      advanced_search_form.show(300)
      $(this).text("Tylko proste wyszukiwanie")
      e.preventDefault()

reset_search_button_event = () ->
  $('#reset_search_button').click (e) ->
    invoice_search_clear()
    e.preventDefault()

invoice_search_clear = () ->
  simple_search_clear()
  advanced_search_clear()

simple_search_clear = () ->
  $('#short_search_form').find('input').val("")

advanced_search_clear = () ->
  $('#advanced_search_form').find('input').val("")
  $('#advanced_search_form').find('input[type=checkbox]').prop('checked', false);


#
# Start select
#
startClientSelect = (object) ->
  object.select2
    theme: 'bootstrap'
    ajax:
      url: '/clients.json'
      dataType: 'json'
      processResults: (data) ->
        return {
        results: $.map(data, (client, i) ->
          {
            id: client.id
            text: client.client_info
          }
        )}
    language:
      noResults: ->
        return "<a type=\"button\" class=\"btn btn-info btn-lg\" onclick='show_client_modal_transport_order()'>Stw√≥rz klienta</a>"
    escapeMarkup: (markup) ->
      return markup;

#
# Finding client by email
#
findClientOnEmailChange = () ->
  $('.email_input').change ->
    console.log('test')
    client_select = $(this).parent().parent().find('select')
    $.ajax "/clients.json",
      type: 'GET'
      data:
        q: $(this).val()
      dataType: 'json'
      error: (jqXHR, textStatus, errorThrown) ->
        console.log(textStatus)
        client_select.show()
        startClientSelect()
      success: (data, textStatus, jqXHR) ->
        if data[0]
          console.log(data)
          client_select.val(data[0]["id"])
          alert("Znaleziono klienta: " + data[0]["client_info"])
        else
          client_select.show()
          startClientSelect(client_select)

#
# Modal functions
#
modal_functions = () ->
  modal_success_binds()
  modal_error_binds()
  modal_actions()
  hide_optional_fields_in_modal()
  toogle_optional_fields_in_modal_on_click()

modal_success_binds = () ->
  $(document).bind("ajax:success", (event, data, status, xhr) ->
    if ( event.target.id == "new_client" )
      option = $('<option selected>' + data.client_info + '</option>').val("" + data.id);
      $("#transport_order_client_id").append(option).trigger('change');
      $('#new_client_modal').modal_success();
      console.log("klient")
    else if (event.target.id == "new_item")
      $('#new_item_modal').modal_success();
      console.log("item"))

modal_error_binds = () ->
  $(document).bind("ajaxError", (event, jqxhr, settings, exception) ->
    $(event.data).render_form_errors($.parseJSON(jqxhr.responseText)))

# functions

modal_actions = () ->
  $.fn.modal_success = ->
    # close modal
    @modal 'hide'
    # clear form input elements
    # todo/note: handle textarea, select, etc
    @find('form input[type="text"]').val ''
    # clear error state
    @clear_previous_errors()
    return

  $.fn.render_form_errors = (errors) ->
    console.log 'chce rendererowarac errory'
    $form = this
    @clear_previous_errors()
    model = @data('model')
    console.log model
    #client_contact_attributes_fax
    # show error messages in input form-group help-block
    $.each errors, (field, messages) ->
      console.log field
      if field.search('[.]') > 0
        association = field.substring(0, field.search('[.]'))
        association = association + '_attributes'
        attribute = field.substring(field.search('[.]') + 1)
        $input = $('input[name="' + model + '[' + association + ']' + '[' + attribute + ']"]')
        console.log 'input[name="' + model + '[' + association + ']' + '[' + attribute + ']"]'
        $input.closest('.form-group').addClass('has-error').find('.help-block').html messages.join(' & ')
      else
        $input = $('input[name="' + model + '[' + field + ']"]')
        console.log 'input[name="' + model + '[' + field + ']"]'
        $input.closest('.form-group').addClass('has-error').find('.help-block').html messages.join(' & ')
      return
    return

  $.fn.clear_previous_errors = ->
    $('.form-group.has-error', this).each ->
      $('.help-block', $(this)).html ''
      $(this).removeClass 'has-error'
      return
    return

hide_optional_fields_in_modal = () ->
  $('.modal-body').find('.optional').hide()

toogle_optional_fields_in_modal_on_click = () ->
  $('#show_more_modal').click ->
    $('.optional').toggle()
